apiVersion: v1
kind: Secret
metadata:
  labels:
    app: sample-flask
    template: sample-flask
  annotations:
  name: sample-flask
stringData:
  database-password: 1suc0n!
  database-user: isucon
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sample-flask
    template: sample-flask
  name: sample-flask
spec:
  ports:
  - name: web
    port: 1323
    targetPort: 1323
  selector:
    app: sample-flask
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: sample-flask
    template: sample-flask
  name: sample-flask
spec:
  host: ""
  to:
    kind: Service
    name: sample-flask
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sample-flask
    template: sample-flask
  name: sample-flask
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample-flask
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: sample-flask
    spec:
      containers:
      - env:
        - name: DB_HOST
          value: mysql
        - name: DB_DBNAME
          value: isuumo
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: sample-flask
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              key: database-password
              name: sample-flask
        name: sample-flask
        image: my-app:latest
        command:
          - db/init.sh
          - '&&'
          - flask
          - run
          - '--host=0.0.0.0'
          - '--port=1323'
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 1323
          initialDelaySeconds: 30
          timeoutSeconds: 3
        ports:
        - containerPort: 1323
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: 1323
          initialDelaySeconds: 3
          timeoutSeconds: 3
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: sample-flask
    template: sample-flask
  name: mysql
stringData:
  database-name: isuumo
  database-password: 1suc0n!
  database-root-password: root1234!
  database-user: isucon
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sample-flask
    template: sample-flask
  name: mysql
spec:
  ports:
  - name: mysql
    port: 3306
  selector:
    name: mysql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: sample-flask
    template: sample-flask
  name: mysql
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: sample-flask
  name: mysql
spec:
  replicas: 1
  serviceName: mysql
  selector:
    matchLabels:
      name: mysql
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: mysql
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: mysql
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-root-password
              name: mysql
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: mysql
        image: mysql:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
          initialDelaySeconds: 30
          timeoutSeconds: 1
        name: mysql
        ports:
        - containerPort: 3306
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /var/lib/mysql/data
          name: mysql-data
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql
